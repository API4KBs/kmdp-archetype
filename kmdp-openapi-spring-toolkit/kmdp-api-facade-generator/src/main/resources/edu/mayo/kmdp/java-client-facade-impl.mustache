package {{package}};

import {{modelPackage}}.*;

{{#imports}}import {{import}};
{{/imports}}

import org.omg.spec.api4kp._20200801.Answer;
import org.omg.spec.api4kp._20200801.ServerSideException;

{{^fullJavaUtil}}
  import java.util.List;
  import java.util.Map;
  import java.util.Optional;
  import java.util.UUID;
{{/fullJavaUtil}}

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

{{#operations}}
public class {{classname}}Facade implements {{package}}.{{classname}} {

  protected enum Integration {
    DIRECT, LOCAL, WEB;
  }

  protected {{package}}.server.{{classname}}Delegate __localDelegate;
  protected {{package}}.server.{{classname}}Internal __directDelegate;
  protected {{package}}.client.ApiClientFactory __webClientFactory;

  protected Integration mode;

  protected {{classname}}Facade(
      {{package}}.server.{{classname}}Delegate delegate) {
    this.__localDelegate = delegate;
    mode = Integration.LOCAL;
  }

  protected {{classname}}Facade(
      {{package}}.client.ApiClientFactory webClientFactory) {
    this.__webClientFactory = webClientFactory;
    this.mode = Integration.WEB;
  }

  protected {{classname}}Facade(
      {{package}}.server.{{classname}}Internal delegate) {
    this.__directDelegate = delegate;
    this.mode = Integration.DIRECT;
  }

  @Override
  public boolean isRemote() {
    return this.mode == Integration.WEB;
  }


  {{#operation}}
  {{#isDeprecated}}@Deprecated{{/isDeprecated}}
  public org.omg.spec.api4kp._20200801.Answer<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> {{operationId}}(
      {{{adaptedParams withType=true}}}
    ) {
    switch (mode) {
      case DIRECT:
        return __directDelegate.{{operationId}}(
          {{{adaptedParams withType=false}}}
        );
      case LOCAL:
        var localResponse = __localDelegate.{{operationId}}(
          {{{adaptedParams withType=false delegate=true}}}
        );
        return edu.mayo.kmdp.util.ws.ResponseHelper.asAnswer(localResponse);
      case WEB:
      default:
        var webClient = __webClientFactory.create();
        var client =
            new {{package}}.client.{{classname}}(webClient);
        try {
          var webResponse = client.{{operationId}}WithHttpInfo(
            {{{adaptedParams withType=false client=true}}}
          );
          return edu.mayo.kmdp.util.ws.ResponseHelper.asAnswer(webResponse);
        } catch (ServerSideException e) {
          return Answer.failedOnServer(e);
        } catch (Exception e) {
          return Answer.failed(e);
        }
    }
  }


  {{/operation}}

}
{{/operations}}

