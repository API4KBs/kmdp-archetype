package {{package}};

import {{modelPackage}}.*;
{{#imports}}import {{import}};
{{/imports}}

{{^fullJavaUtil}}
  import java.util.List;
  import java.util.Map;
  import java.util.Optional;
  import java.util.UUID;
{{/fullJavaUtil}}

{{#operations}}
public interface {{classname}} extends {{package}}.server.{{classname}}Internal
 {{#operation}}, {{package}}.server.{{classname}}Internal._{{operationId}}
 {{/operation}} {

  public static {{classname}} newInstance( {{package}}.client.ApiClientFactory apiClientFactory ) {
    return new {{package}}.{{classname}}Facade( apiClientFactory );
  }

  public static {{classname}} newInstance( String baseUrl ) {
    return new {{package}}.{{classname}}Facade(
     new {{package}}.client.ApiClientFactory(baseUrl) );
  }

  public static {{classname}} newInstance( {{package}}.server.{{classname}}Delegate delegate ) {
    return new {{package}}.{{classname}}Facade( delegate );
  }

  public static {{classname}} newInstance( {{package}}.server.{{classname}}Internal internal ) {
    return new {{package}}.{{classname}}Facade( internal );
  }

  /**
   * @return true if this client connects to a remote server
   */
  public boolean isRemote();


{{#operation}}
  {{#isDeprecated}}@Deprecated{{/isDeprecated}}
  /**
   * {{summary}}
   *
   * @see {{classname}}#{{operationId}}
   */
  default {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}} do_{{operationId}}(
    {{{adaptedParams withType=true}}}
  ) {
    {{#returnType}} return {{/returnType}} {{operationId}}({{{adaptedParams withType=false}}}).orElse(null);
  }

  /**
    * {{{summary}}}
    *
    * {{{notes}}}
    */
  org.omg.spec.api4kp._20200801.Answer<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> {{operationId}}(
    {{{adaptedParams withType=true}}}
  );

  {{#hasOptionalParams}}
  /**
   * {{summary}}
   *
   * @see {{classname}}#{{operationId}}
   */
  default org.omg.spec.api4kp._20200801.Answer<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> {{operationId}}(
    {{{adaptedParams withType=true required=true}}}
  ) {
    return {{operationId}}({{{adaptedParams withType=false required=true}}});
  }
  {{/hasOptionalParams}}


  {{/operation}}
}
{{/operations}}

